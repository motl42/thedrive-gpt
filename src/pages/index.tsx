import { NextPageWithLayout } from './_app';
import {
  Box,
  Button,
  chakra,
  Input,
  Stack,
  Text,
  Spinner,
  Heading,
  Link,
  useColorModeValue,
} from '@chakra-ui/react';
import axios from 'axios';
import { useMutation } from '@tanstack/react-query';
import { QuestionRes } from '~/types';
import { ExternalLinkIcon } from '@chakra-ui/icons';

const IndexPage: NextPageWithLayout = () => {
  const askQuestion = useMutation([], async (question: string) => {
    console.log(
      'process.env.NEXT_PUBLIC_VERCEL_URL',
      process.env.NEXT_PUBLIC_VERCEL_URL,
    );
    const res = await axios.post(
      'https://thedrive-gpt.vercel.app/api/api' ?? 'http://localhost:9000',
      {
        question: question,
      },
    );
    console.log('res', res.data);

    return res.data as QuestionRes;
  });

  const relevantDocs = askQuestion.data?.source_documents.filter(
    (d: any) => d.score > 0.5,
  );

  return (
    <Box px={10} py={[10, 20]} mx="auto" maxWidth="1400px">
      <Box
        w={{
          base: 'full',
          md: 11 / 12,
          xl: 8 / 12,
        }}
        textAlign={{
          base: 'left',
          md: 'center',
        }}
        mx="auto"
      >
        <chakra.h1
          textAlign="center"
          mb={[6, 3]}
          fontSize={{
            base: '3xl',
            md: '5xl',
          }}
          fontWeight={{
            base: 'bold',
            md: 'extrabold',
          }}
          color="gray.900"
          _dark={{
            color: 'gray.100',
          }}
          lineHeight="shorter"
        >
          TheDrive GPT
        </chakra.h1>
        <chakra.p
          mt={8}
          mx={[null, null, null, 20]}
          fontSize={{
            base: 'lg',
            md: '28px',
          }}
          lineHeight="base"
        >
          Ask a (health) related question and get an answer based on Peter
          Attias Podcast{' '}
          <Link
            /* color="blue.300" */ fontWeight="semibold"
            href="https://peterattiamd.com/podcast/"
          >
            TheDrive
          </Link>
          .
        </chakra.p>
        <chakra.p fontSize="md" mt={2} mb={6} color="gray.500">
          Important: This website is not affiliated with Peter Attia. The
          responses are generated by GPT and may contain inaccuracies.
        </chakra.p>
        <Stack
          as="form"
          onSubmit={(e: any) => {
            e.preventDefault();
            askQuestion.mutate(e.target[0].value as string);
          }}
          spacing={4}
          pt={1}
          mx="auto"
          alignItems="center"
        >
          <Text
            fontSize={['2xl', '4xl']}
            fontWeight={800}
            alignSelf="flex-start"
          >
            Question:
          </Text>
          <Stack
            alignItems="center"
            width="100%"
            spacing={5}
            direction={['column', 'row']}
          >
            <Input
              mt={0}
              size="lg"
              fontSize="xl"
              type="text"
              placeholder="What is Zone 2 training?"
              required
              color={useColorModeValue('gray.800', 'gray.200')}
              bg={useColorModeValue('gray.100', 'gray.600')}
              rounded={'full'}
            />
            <Button
              type="submit"
              cursor="pointer"
              bg={'blue.400'}
              rounded={'full'}
              color={'white'}
              flex={'1 0 auto'}
              _hover={{ bg: 'blue.500' }}
              _focus={{ bg: 'blue.500' }}
            >
              Ask GPT
            </Button>
          </Stack>
        </Stack>
        {askQuestion.isLoading && <Spinner mt={10}>loading...</Spinner>}
        {askQuestion.data &&
          relevantDocs &&
          (relevantDocs?.length == 0 ? (
            <Text mt={10} fontSize="xl" textAlign="left">
              Couldn&apos;t find the answer in the podcast.
            </Text>
          ) : (
            <Stack mt={14} spacing="8">
              <Stack>
                <Text
                  fontSize={['2xl', '4xl']}
                  fontWeight={800}
                  textAlign="left"
                >
                  Answer:
                </Text>
                <Text fontSize="lg" textAlign="left" whiteSpace="pre-wrap">
                  {askQuestion.data.answer}
                </Text>
              </Stack>
              <Stack>
                <Text
                  fontSize={['2xl', '4xl']}
                  fontWeight={800}
                  textAlign="left"
                >
                  Sources:
                </Text>
                <Stack spacing={5} textAlign="left">
                  {relevantDocs.map((source, i) => (
                    <Stack p={[6, 10]} key={i} border="4px" borderRadius="10px">
                      <Stack direction="row">
                        <Heading size="md">{source.metadata.title}</Heading>
                      </Stack>
                      <Text fontSize="" textAlign="left">
                        {source.page_content}
                      </Text>
                      <Stack
                        direction="row"
                        pt={6}
                        spacing={[5, 10]}
                        alignItems="center"
                      >
                        <Link
                          fontSize="2xl"
                          href={source.metadata.link}
                          isExternal
                          display="flex"
                        >
                          <ExternalLinkIcon />
                        </Link>
                        <chakra.audio controls w="80%">
                          <chakra.source
                            src={
                              source?.metadata.audio_url +
                              '#t=' +
                              source?.metadata.start
                            }
                            type="audio/mpeg"
                          />
                          Your browser does not support the audio element.
                        </chakra.audio>
                      </Stack>
                    </Stack>
                  ))}
                </Stack>
              </Stack>
            </Stack>
          ))}
      </Box>
    </Box>
  );
};

export default IndexPage;
